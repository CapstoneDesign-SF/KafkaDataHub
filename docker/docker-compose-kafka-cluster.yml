# for demo with one zookeeper and one kafka
#version: '2'
#services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#  kafka:
#    image: wurstmeister/kafka:2.12-2.5.0
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
---
version: '3.9'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper-1
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"
    volumes:
      - ~/data/zookeeper-1/data:/data
      - ~/data/zookeeper-1/datalog:/datalog
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper-2
    container_name: zookeeper-2
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "32181:2181"
    volumes:
      - ~/data/zookeeper-2/data:/data
      - ~/data/zookeeper-2/datalog:/datalog
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper-3
    container_name: zookeeper-3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "42181:2181"
    volumes:
      - ~/data/zookeeper-3/data:/data
      - ~/data/zookeeper-3/datalog:/datalog
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  kafka-1:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka-1
    container_name: kafka-1
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - ~/data/kafka-1/data:/tmp/kafka-logs
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  kafka-2:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka-2
    container_name: kafka-2
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9092,EXTERNAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - ~/data/kafka-2/data:/tmp/kafka-logs
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always

  kafka-3:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka-3
    container_name: kafka-3
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
    ports:
      - "49092:49092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9092,EXTERNAL://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - ~/data/kafka-3/data:/tmp/kafka-logs
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always
  
  # kafka-rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.6.0
  #   container_name: full-kafka-rest-proxy
  #   hostname: kafka-rest-proxy
  #   ports: 
  #     - "8082:8082"
  #   depends_on:
  #     kafka-1:
  #       condition: service_healthy
  #     kafka-2:
  #       condition: service_healthy
  #     kafka-3:
  #       condition: service_healthy
  #   environment:
  #     KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
  #     KAFKA_REST_HOST_NAME: kafka-rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:7.6.0
  #   container_name: schema-registry
  #   hostname: schema-registry
  #   ports:
  #     - 8085:8085
  #   depends_on:
  #     kafka-1:
  #       condition: service_healthy
  #     kafka-2:
  #       condition: service_healthy
  #     kafka-3:
  #       condition: service_healthy
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092
  #     SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8085
  #     SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
  #     SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
  #     SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
  
  # kafka-connect:
  #   image: pmj6823/kafka-connect-with-connector-jdbc:0.1
  #   container_name: kafka-connect
  #   hostname: kafka-connect
  #   ports:
  #     - 8083:8083
  #   depends_on:
  #     - kafka-1:
  #       condition: service_healthy
  #     - kafka-2:
  #       condition: service_healthy
  #     - kafka-3:
  #       condition: service_healthy
  #     - schema-registry
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
  #     CONNECT_GROUP_ID: compose-connect-group
  #     CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_TOPIC: _connect_status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
  #     CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
  #     CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
  #     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   ports:
  #     - "8989:8080"
  #   depends_on: 
  #     - schema-registry
  #   restart: always
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
  #     KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8085
  #     KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
  #     KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083

#  schema-registry:
#    image: confluentinc/cp-schema-registry:latest
#    container_name: schema-registry
#    depends_on:
#      kafka-1:
#        condition: service_healthy
#      kafka-2:
#        condition: service_healthy
#      kafka-3:
#        condition: service_healthy
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'kafka-1:9092,kafka-2:9092,kafka-3:9092'
#      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_INTERNAL://localhost:29092
#      SCHEMA_REGISTRY_DEBUG: 'true'
#    restart: always

#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    container_name: kafdrop
#    restart: "no"
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKER_CONNECT: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
#      JVM_OPTS: "-Xms32M -Xmx64M"
#    depends_on:
#      kafka-1:
#        condition: service_healthy
#      kafka-2:
#        condition: service_healthy
#      kafka-3:
#        condition: service_healthy
#    healthcheck:
#      test: nc -z localhost 9000 || exit -1
#      start_period: 15s
#      interval: 5s
#      timeout: 10s
#      retries: 10

  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   hostname: kafka-ui
  #   container_name: kafka-ui
  #   ports:
  #     - "8989:8080"
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=kafka-cluster-demo
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
  #   depends_on:
  #     kafka-1:
  #       condition: service_healthy
  #     kafka-2:
  #       condition: service_healthy
  #     kafka-3:
  #       condition: service_healthy
  #     zookeeper-1:
  #       condition: service_healthy
  #     zookeeper-2:
  #       condition: service_healthy
  #     zookeeper-3:
  #       condition: service_healthy

#  control-center:
#    image: confluentinc/cp-enterprise-control-center
#    container_name: control-center
#    depends_on:
#      kafka-1:
#        condition: service_healthy
#      kafka-2:
#        condition: service_healthy
#      kafka-3:
#        condition: service_healthy
#    ports:
#      - "9021:9021"
#    environment:
#      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-1:9092,kafka-2:9092,kafka-3:9092'
#      CONTROL_CENTER_REPLICATION_FACTOR: 1
#      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
#      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
#      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
#      PORT: 9021
#    restart: always
...